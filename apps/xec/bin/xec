#!/usr/bin/env node

// Check Node.js version
const { major } = process.versions.node.split('.').map(Number);
if (major < 18) {
  console.error(`Error: Xec requires Node.js 18.0.0 or higher. You are using ${process.version}`);
  process.exit(1);
}

// // Suppress annoying "module not found" messages from optional dependencies
// const originalConsoleLog = console.log;
// const originalConsoleWarn = console.warn;
// const originalConsoleError = console.error;
// const originalStdoutWrite = process.stdout.write;
// const originalStderrWrite = process.stderr.write;

// const suppressMessages = [
//   'module "./crypto/build/Release/sshcrypto.node" not found',
//   'module "cpu-features" not found'
// ];

// // Intercept console methods
// console.log = function (...args) {
//   const message = args.join(' ');
//   if (!suppressMessages.some(msg => message.includes(msg))) {
//     originalConsoleLog.apply(console, args);
//   }
// };

// console.warn = function (...args) {
//   const message = args.join(' ');
//   if (!suppressMessages.some(msg => message.includes(msg))) {
//     originalConsoleWarn.apply(console, args);
//   }
// };

// console.error = function (...args) {
//   const message = args.join(' ');
//   if (!suppressMessages.some(msg => message.includes(msg))) {
//     originalConsoleError.apply(console, args);
//   }
// };

// // Intercept direct stdout/stderr writes
// process.stdout.write = function (chunk, encoding, callback) {
//   const message = chunk.toString();
//   if (!suppressMessages.some(msg => message.includes(msg))) {
//     return originalStdoutWrite.apply(process.stdout, arguments);
//   }
//   return true;
// };

// process.stderr.write = function (chunk, encoding, callback) {
//   const message = chunk.toString();
//   if (!suppressMessages.some(msg => message.includes(msg))) {
//     return originalStderrWrite.apply(process.stderr, arguments);
//   }
//   return true;
// };

// Enable source map support for better error traces
try {
  await import('source-map-support/register');
} catch (e) {
  // Source map support is optional
}

// Load and run CLI
import('../dist/main.js')
  .then(cli => cli.run())
  .catch(err => {
    if (err.code === 'MODULE_NOT_FOUND') {
      console.error('Error: Xec CLI is not built. Please run "yarn build" first.');
    } else {
      console.error('Failed to start Xec CLI:', err.message || err);
      // Always show stack trace for debugging
      console.error('Stack trace:', err.stack);
    }
    process.exit(1);
  });
