// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`taskLog (isCI = false) > error > clears output if showLog = false 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   some error!
",
]
`;

exports[`taskLog (isCI = false) > error > renders output with message 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   some error!
",
  "â”‚
â”‚  line 0
â”‚  line 1
",
]
`;

exports[`taskLog (isCI = false) > group > applies limit per group 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 1
â”‚  Group 1 line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 2
â”‚  Group 0 line 3
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 1
â”‚  Group 1 line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 2
â”‚  Group 0 line 3
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 2
â”‚  Group 1 line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 3
â”‚  Group 0 line 4
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 2
â”‚  Group 1 line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 3
â”‚  Group 0 line 4
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 3
â”‚  Group 1 line 4
",
]
`;

exports[`taskLog (isCI = false) > group > can render multiple groups of different sizes 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
â”‚  Group 1 line 4
",
]
`;

exports[`taskLog (isCI = false) > group > can render multiple groups of equal size 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
â”‚  Group 0 line 3
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
â”‚  Group 0 line 3
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
â”‚  Group 0 line 3
â”‚  Group 0 line 4
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
â”‚  Group 0 line 3
â”‚  Group 0 line 4
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
â”‚  Group 1 line 4
",
]
`;

exports[`taskLog (isCI = false) > group > handles empty groups 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â—†  Group success!
",
]
`;

exports[`taskLog (isCI = false) > group > renders error state 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "[2K[1A[2K[1A[2K[G",
  "â–   Group error!
",
]
`;

exports[`taskLog (isCI = false) > group > renders group error state 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "[2K[1A[2K[1A[2K[G",
  "â–   Group error!
",
]
`;

exports[`taskLog (isCI = false) > group > renders group success state 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "[2K[1A[2K[1A[2K[G",
  "â—†  Group success!
",
]
`;

exports[`taskLog (isCI = false) > group > renders success state 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "[2K[1A[2K[1A[2K[G",
  "â—†  Group success!
",
]
`;

exports[`taskLog (isCI = false) > group > showLog shows all groups in order 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  Group 0
",
  "â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
â”‚  Group 1 line 4
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â—†  Group 0 success!
",
  "â”‚  Group 1
",
  "â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
â”‚  Group 1 line 4
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â—†  Group 0 success!
",
  "â–   Group 1 error!
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   overall error
",
  "â”‚  Group 0
",
  "â”‚
â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚
â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
â”‚  Group 1 line 4
",
]
`;

exports[`taskLog (isCI = false) > message > can write line by line 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
]
`;

exports[`taskLog (isCI = false) > message > can write multiple lines 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
â”‚  line 1
",
]
`;

exports[`taskLog (isCI = false) > message > enforces limit if set 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 1
â”‚  line 2
",
]
`;

exports[`taskLog (isCI = false) > message > prints empty lines 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 1
",
  "[2K[1A[2K[G",
  "â”‚  line 1
â”‚
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 1
â”‚
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > message > raw = true appends message text until newline 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0still line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0still line 0
â”‚  line 1
",
]
`;

exports[`taskLog (isCI = false) > message > raw = true works when mixed with non-raw messages 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0still line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0still line 0
â”‚  line 1
",
]
`;

exports[`taskLog (isCI = false) > message > raw = true works when started with non-raw messages 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1still line 1
",
]
`;

exports[`taskLog (isCI = false) > retainLog > error > outputs limited log with limit by default 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > error > retainLog = false outputs full log without limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > error > retainLog = false outputs limited log with limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > error > retainLog = true outputs full log 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > error > retainLog = true outputs full log with limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > success > outputs limited log with limit by default 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > success > retainLog = false outputs full log without limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > success > retainLog = false outputs limited log with limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > success > retainLog = true outputs full log 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > retainLog > success > retainLog = true outputs full log with limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 1
â”‚  line 2
",
  "[2K[1A[2K[1A[2K[G",
  "â”‚  line 2
â”‚  line 3
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = false) > success > clears output and renders message 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  success!
",
]
`;

exports[`taskLog (isCI = false) > success > renders output if showLog = true 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "â”‚  line 0
",
  "[2K[1A[2K[G",
  "â”‚  line 0
â”‚  line 1
",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  success!
",
  "â”‚
â”‚  line 0
â”‚  line 1
",
]
`;

exports[`taskLog (isCI = false) > writes message header 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
]
`;

exports[`taskLog (isCI = true) > error > clears output if showLog = false 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   some error!
",
]
`;

exports[`taskLog (isCI = true) > error > renders output with message 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   some error!
",
  "â”‚
â”‚  line 0
â”‚  line 1
",
]
`;

exports[`taskLog (isCI = true) > group > applies limit per group 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > group > can render multiple groups of different sizes 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > group > can render multiple groups of equal size 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > group > handles empty groups 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
]
`;

exports[`taskLog (isCI = true) > group > renders error state 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > group > renders group error state 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > group > renders group success state 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > group > renders success state 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > group > showLog shows all groups in order 1`] = `
[
  "â”‚
",
  "â—‡  Some log
",
  "â”‚
",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   overall error
",
  "â”‚  Group 0
",
  "â”‚
â”‚  Group 0 line 0
â”‚  Group 0 line 1
â”‚  Group 0 line 2
",
  "â”‚  Group 1
",
  "â”‚
â”‚  Group 1 line 0
â”‚  Group 1 line 1
â”‚  Group 1 line 2
â”‚  Group 1 line 3
â”‚  Group 1 line 4
",
]
`;

exports[`taskLog (isCI = true) > message > can write line by line 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > message > can write multiple lines 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
]
`;

exports[`taskLog (isCI = true) > message > enforces limit if set 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > message > prints empty lines 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > message > raw = true appends message text until newline 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > message > raw = true works when mixed with non-raw messages 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > message > raw = true works when started with non-raw messages 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
]
`;

exports[`taskLog (isCI = true) > retainLog > error > outputs limited log with limit by default 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > error > retainLog = false outputs full log without limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > error > retainLog = false outputs limited log with limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > error > retainLog = true outputs full log 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > error > retainLog = true outputs full log with limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â–   woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > success > outputs limited log with limit by default 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > success > retainLog = false outputs full log without limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > success > retainLog = false outputs limited log with limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > success > retainLog = true outputs full log 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > retainLog > success > retainLog = true outputs full log with limit 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  woo!
",
  "â”‚
â”‚  line 0
â”‚  line 1
â”‚  line 2
â”‚  line 3
",
]
`;

exports[`taskLog (isCI = true) > success > clears output and renders message 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  success!
",
]
`;

exports[`taskLog (isCI = true) > success > renders output if showLog = true 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
  "[2K[1A[2K[G",
  "[2K[1A[2K[1A[2K[1A[2K[1A[2K[1A[2K[G",
  "â”‚
â—†  success!
",
  "â”‚
â”‚  line 0
â”‚  line 1
",
]
`;

exports[`taskLog (isCI = true) > writes message header 1`] = `
[
  "â”‚
",
  "â—‡  foo
",
  "â”‚
",
]
`;
